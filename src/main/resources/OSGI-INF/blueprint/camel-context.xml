<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:ext="http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.5.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">

    <ext:property-placeholder evaluator="fabric8" id="fabric8PropertyPlaceholder"/>

    <!-- to setup camel servlet with OSGi HttpService -->
    <reference id="httpService" interface="org.osgi.service.http.HttpService"/>
    <bean class="org.apache.camel.component.servlet.osgi.OsgiServletRegisterer" destroy-method="unregister" id="servletRegisterer" init-method="register">
        <property name="alias" value="/camel-rest"/>
        <property name="httpService" ref="httpService"/>
        <property name="servlet" ref="camelServlet"/>
    </bean>

    <bean class="org.apache.camel.component.servlet.CamelHttpTransportServlet" id="camelServlet"/>

    <!-- here is Camel configured with a number of routes -->
    <camelContext id="rest-sql-camel-context" xmlns="http://camel.apache.org/schema/blueprint">

        <restConfiguration bindingMode="off" component="servlet" contextPath="/camel-rest"/>
        <rest apiDocs="true"  path="/api">
            <post id="post-1" uri="/endpoint-one">
                <to uri="direct:inbox"/>
            </post>
        </rest>
        <route id="_receptRoute" streamCache="true">
            <from id="_fromIR1" uri="direct:inbox"/>
            <onException id="_onException1">
                <exception>org.apache.camel.ExchangeTimedOutException</exception>
                <handled>
                    <constant>true</constant>
                </handled>
                <log id="_log1" message=">> Exception : ${body}"/>
                <convertBodyTo id="_convertBodyTo1" type="java.lang.String"/>
                <to id="_to2" uri="direct:error"/>
            </onException>
            <log id="_log1" message="\n*****\n${body}\n*****"/>
            <log id="_log2" message="BODY CLASS =>\n${body.class}\n "/>
            <convertBodyTo id="_convertBodyTo2" type="java.lang.String"/>
            <setBody id="_setBody1">
                <constant>TEST SUCCESS</constant>
            </setBody>
        </route>
        <route id="_route1">
            <from id="_fromError" uri="direct:error"/>
            <setHeader headerName="error-code" id="_setHeader1">
                <constant>111</constant>
            </setHeader>
            <setHeader headerName="error-message" id="_setHeader2">
                <simple>${exception.message}</simple>
            </setHeader>
            <setHeader headerName="message" id="_setHeader3">
                <simple>${body}</simple>
            </setHeader>
            <log id="_log3" message=">> Route Error"/>
            <log id="_log4" message="\n*****\n DESCRIPTION ERROR \n ${body}\n*****"/>
            <log id="_log5" message="\n*****\n error-message \n ${exception.message}\n*****"/>
            <setBody id="_setBody2">
                <constant>ERROR</constant>
            </setBody>
           
        </route>
    </camelContext>
</blueprint>
